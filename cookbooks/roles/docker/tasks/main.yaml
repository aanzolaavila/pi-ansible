- name: Set mounts and symlinks
  block:
    - loop:
        - docker
        - kubelet
      ansible.builtin.file:
        path: /mnt/ssd/{{ item }}
        state: directory

    - name: Set symlink for docker
      loop:
        - docker
        - kubelet
      ansible.builtin.file:
        src: /mnt/ssd/{{ item }}
        dest: /var/lib/{{ item }}
        state: link

    - name: Set tmpfs mount for containerd
      ansible.posix.mount:
        path: /var/lib/containerd
        src: tmpfs
        state: mounted
        fstype: tmpfs
        opts: size=5M

- name: Docker Cronjobs
  block:
    - name: Docker cleanup
      ansible.builtin.cron:
        name: "docker prune"
        special_time: daily
        job: "docker system prune --all --volumes --force"

- name: Docker installation
  block:
    - name: add docker GPG
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker respository
      ansible.builtin.apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: install docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
        state: latest
        update_cache: no

    - name: copy daemon configuration
      ansible.builtin.copy:
        src: daemon.json
        dest: /etc/docker/daemon.json
      notify: restart docker

    - name: make sure docker is running
      loop:
        - docker.service
        - docker.socket
        - containerd
      ansible.builtin.service:
        name: "{{item}}"
        state: started
        enabled: yes

    - name: Install docker-compose
      ansible.builtin.get_url:
        url: https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-aarch64
        dest: /usr/local/bin/docker-compose
        mode: "u+x,g+x"

- name: Configure CRI Docker
  block:
    - name: decompress archive
      block:
        - ansible.builtin.unarchive:
            src: https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.14/cri-dockerd-0.3.14.arm64.tgz
            dest: /tmp
            mode: "0550"
            remote_src: yes

        - ansible.builtin.copy:
            src: &tmp-cri /tmp/cri-dockerd/cri-dockerd
            dest: /usr/bin/cri-dockerd
            remote_src: true

        - ansible.builtin.file:
            path: *tmp-cri
            state: absent

    - name: Download cri-docker services files
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/Mirantis/cri-dockerd/refs/tags/v0.3.14/packaging/systemd/{{item}}
        dest: /etc/systemd/system/{{item}}
        mode: "0440"
      loop:
        - cri-docker.service
        - cri-docker.socket

    - name: enable the CRI-Docker services
      ansible.builtin.service:
        name: "{{item}}"
        enabled: yes
        state: started
        daemon-reload: yes
      loop:
        - cri-docker.service
        - cri-docker.socket
