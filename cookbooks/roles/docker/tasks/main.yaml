---
- name: Set mounts and symlinks
  block:
    - loop:
        - docker
        - kubelet
      ansible.builtin.file:
        path: /mnt/ssd/{{ item }}
        state: directory

    - name: Set symlink for docker
      loop:
        - docker
        - kubelet
      ansible.builtin.file:
        src: /mnt/ssd/{{ item }}
        dest: /var/lib/{{ item }}
        state: link

    - name: Set tmpfs mount for containerd
      mount:
        path: /var/lib/containerd
        src: tmpfs
        state: mounted
        fstype: tmpfs
        opts: size=5M

- name: Docker Cronjobs
  block:
    - name: Docker cleanup
      ansible.builtin.cron:
        name: "docker prune"
        special_time: hourly
        job: "docker system prune -a"

- name: Docker installation
  block:
    - name: add docker GPG
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker respository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: install docker
      loop:
        - docker-ce
        - docker-ce-cli
        # - containerd.io
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes

    - name: copy daemon configuration
      copy:
        src: daemon.json
        dest: /etc/docker/daemon.json
      notify: restart docker

    - name: make sure docker is running
      loop:
        - docker.service
        - docker.socket
        - containerd
      service:
        name: "{{item}}"
        state: started
        enabled: yes

    - name: Install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-aarch64
        dest: /usr/local/bin/docker-compose
        mode: "u+x,g+x"

# We set all docker configuration on daemon.json
# - name: Remove default flags for docker daemon
#   lineinfile:
#     path: /etc/sysconfig/docker
#     regexp: "^OPTIONS="
#     line: 'OPTIONS=""'

- name: Configure CRI Docker
  block:
    - name: Decompress archive
      ansible.builtin.unarchive:
        src: https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.14/cri-dockerd-0.3.14.arm64.tgz
        dest: /tmp
        mode: "0550"
        remote_src: yes

    - name: Move binary to /usr/bin
      ansible.builtin.shell: |
        mv /tmp/cri-dockerd/cri-dockerd /usr/bin/cri-dockerd

    - name: Download cri-docker services files
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/{{item}}
        dest: /etc/systemd/system/{{item}}
        mode: "0440"
      loop:
        - cri-docker.service
        - cri-docker.socket

    - name: enable the CRI-Docker services
      ansible.builtin.service:
        name: "{{item}}"
        enabled: yes
        state: started
        daemon-reload: yes
      loop:
        - cri-docker.service
        - cri-docker.socket
