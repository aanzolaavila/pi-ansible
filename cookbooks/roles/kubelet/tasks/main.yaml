- name: Remove swap
  block:
    - name: Write noswap systemd service config file
      template:
        src: noswap.service.j2
        dest: /etc/systemd/system/noswap.service
        owner: root
        group: root
        mode: 0644

    - name: enable noswap service
      service:
        name: noswap
        state: started
        enabled: true

    - name: disable dphys-swapfile service
      service:
        name: dphys-swapfile
        state: stopped
        enabled: false

- name: Configure Kubernetes systemwide
  block:
    - name: disable SWAP (Kubeadm requirement)
      shell: |
        swapoff -a

    - name: create an empty file for the Containerd module
      copy:
        content: ""
        dest: /etc/modules-load.d/containerd.conf
        force: no

    - name: configure modules for Containerd
      blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter

    - name: create an empty file for Kubernetes sysctl params
      copy:
        content: ""
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        force: no

    - name: configure sysctl params for Kubernetes
      lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        line: "{{ item }}"
      with_items:
        - "net.bridge.bridge-nf-call-iptables  = 1"
        - "net.ipv4.ip_forward                 = 1"
        - "net.bridge.bridge-nf-call-ip6tables = 1"

    - name: add Kubernetes apt-key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: "0644"
        force: true

    - name: apply sysctl params without reboot
      command: sysctl --system

    - name: add Kubernetes' APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        update_cache: yes

- name: Install Kubelet
  block:
    # - name: install Containerd
    #   ansible.builtin.apt:
    #     name: containerd.io
    #     state: present

    # - name: create Containerd directory
    #   file:
    #     path: /etc/containerd
    #     state: directory

    # - name: add Containerd configuration
    #   shell: /usr/bin/containerd config default > /etc/containerd/config.toml
    #
    # - name: configuring the systemd cgroup driver for Containerd
    #   lineinfile:
    #     path: /etc/containerd/config.toml
    #     regexp: "            SystemdCgroup = false"
    #     line: "            SystemdCgroup = true"

    # - name: enable the Containerd service and start it
    #   ansible.builtin.systemd:
    #     name: containerd
    #     state: started
    #     enabled: yes
    #     daemon-reload: yes

    - name: install Kubelet
      loop:
        - kubelet
        - kubeadm
        - kubernetes-cni
      ansible.builtin.apt:
        name: "{{item}}"
        state: present
        update_cache: true

    - name: load br_netfilter kernel module
      modprobe:
        name: br_netfilter
        state: present

    - name: set bridge-nf-call-iptables
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1

    - name: set ip_forward
      sysctl:
        name: net.ipv4.ip_forward
        value: 1

# - name: Setup CNI plugins
#   block:
# - name: Git checkout container networking
#   ansible.builtin.git:
#     repo: "https://github.com/containernetworking/plugins"
#     dest: /tmp/plugins
#     version: v1.5.0
#
# - ansible.builtin.file:
#     path: /opt/cni/bin
#     state: directory
#
# - name: Build plugins
#   ansible.builtin.shell: |
#     ./build_linux.sh
#     cp bin/* /opt/cni/bin/
#   args:
#     chdir: /tmp/plugins
#     executable: /bin/bash
#
# - name: Copy configuration for networking plugin
#   ansible.builtin.get_url:
#     url: https://raw.githubusercontent.com/cri-o/cri-o/v1.30.2/contrib/cni/10-crio-bridge.conflist
#     dest: /etc/cni/net.d/10-crio-bridge.conflist

- name: Configure Kubelet
  block:
    - name: Create config files
      copy:
        src: .
        dest: /
        owner: root
        group: root
        mode: "0444"
    - name: Create kubelet startup options file
      template:
        src: kubelet.j2
        dest: /etc/kubernetes/kubelet
    - name: Create static pod directory
      file:
        path: /etc/kubelet.d
        state: directory
    - name: Create docker data directory
      file:
        path: /mnt/docker
        state: directory
    - name: Restart container services
      loop:
        - docker
        - cri-docker.service
        - kubelet
      systemd:
        name: "{{ item }}"
        state: restarted
        daemon_reload: true
        enabled: yes
    - name: wait for kubelet to start
      wait_for: port=10250 timeout=60

- name: Install Nerdctl
  block:
    - name: Create dest directory
      file:
        path: /tmp/nerdctl
        state: directory

    - name: Decompress archive
      ansible.builtin.unarchive:
        src: https://github.com/containerd/nerdctl/releases/download/v1.7.6/nerdctl-full-1.7.6-linux-arm64.tar.gz
        dest: /tmp/nerdctl
        mode: "0555"
        remote_src: yes

    - name: Copy contents to /usr/bin
      ansible.builtin.shell: |
        chmod +rx /tmp/nerdctl/bin/*
        mv /tmp/nerdctl/bin/* /usr/bin
