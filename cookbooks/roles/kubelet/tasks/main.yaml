- name: Remove swap
  block:
    - name: Write noswap systemd service config file
      template:
        src: noswap.service.j2
        dest: /etc/systemd/system/noswap.service
        owner: root
        group: root
        mode: 0644

    - name: enable noswap service
      service:
        name: noswap
        state: started
        enabled: true

    - name: disable dphys-swapfile service
      service:
        name: dphys-swapfile
        state: stopped
        enabled: false

- name: Configure Kubernetes systemwide
  block:
    - name: disable SWAP (Kubeadm requirement)
      shell: |
        swapoff -a

    - name: create an empty file for the Containerd module
      copy:
        content: ""
        dest: /etc/modules-load.d/containerd.conf
        force: no

    - name: configure modules for Containerd
      blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter

    - name: create an empty file for Kubernetes sysctl params
      copy:
        content: ""
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        force: no

    - name: configure sysctl params for Kubernetes
      lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        line: "{{ item }}"
      with_items:
        - "net.bridge.bridge-nf-call-iptables  = 1"
        - "net.ipv4.ip_forward                 = 1"
        - "net.bridge.bridge-nf-call-ip6tables = 1"

    - name: add Kubernetes apt-key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: "0644"
        force: true

    - name: apply sysctl params without reboot
      command: sysctl --system

    - name: add Kubernetes' APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        update_cache: yes

- name: Install Kubelet
  block:
    - name: install Kubelet
      loop:
        - kubelet
        - kubeadm
        - kubernetes-cni
      ansible.builtin.apt:
        name: "{{item}}"
        state: present
        update_cache: true

    - name: load br_netfilter kernel module
      modprobe:
        name: br_netfilter
        state: present

    - name: set bridge-nf-call-iptables
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1

    - name: set ip_forward
      sysctl:
        name: net.ipv4.ip_forward
        value: 1

- name: Setup CNI plugins
  block:
    - ansible.builtin.file:
        path: /opt/cni/bin
        state: directory

    - name: Decompress archive
      ansible.builtin.unarchive:
        src: "https://github.com/containernetworking/plugins/releases/download/v1.5.0/cni-plugins-linux-arm64-v1.5.0.tgz"
        dest: /opt/cni/bin
        remote_src: true

    - name: setup flannel cni plugin
      import_tasks: flannel.yaml

- name: Configure Kubelet
  block:
    - name: Create config files
      copy:
        src: .
        dest: /
        owner: root
        group: root
        mode: "0444"
    - name: Create kubelet startup options file
      template:
        src: kubelet.j2
        dest: /etc/kubernetes/kubelet
    - name: Create static pod directory
      file:
        path: /etc/kubelet.d
        state: directory
    - name: Create docker data directory
      file:
        path: /mnt/docker
        state: directory
    - name: Start container services
      loop:
        - docker
        - cri-docker.service
        - kubelet
      systemd:
        name: "{{ item }}"
        state: started
        daemon_reload: true
        enabled: yes
    - name: wait for kubelet to start
      wait_for: port=10250 timeout=60
